{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","config/ChatLogics.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/miscellaneous/ProfileModal.js","components/RoomPage.js","components/SingleChat.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","className","type","placeholder","onChange","e","target","onClick","disabled","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","activeTab","setActiveTab","handleTabClick","tab","concat","isSameSenderMargin","messages","m","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","getSenderpic","_users$2","ScrollableChat","ScrollableFeed","map","style","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","size","cursor","src","backgroundColor","marginLeft","marginTop","borderRadius","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","mb","variant","fontSize","colorScheme","CloseIcon","pl","UserListItem","Box","bg","_hover","background","color","w","d","alignItems","Text","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","_Fragment","SlOptionsVertical","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","fontFamily","justifyContent","ModalCloseButton","ModalBody","flexDir","flexWrap","pb","FormControl","Input","Button","ml","isLoading","Spinner","ModalFooter","ProfileModal","h","Image","boxSize","alt","base","md","RoomPage","_location$state","useLocation","state","chat","username","voice","zpRef","React","roomID","userID","userName","myMeeting","element","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","current","create","joinRoom","container","scenario","mode","GroupCall","turnOnCameraWhenJoining","showMyCameraToggleButton","showAudioVideoSettingsButton","showScreenSharingButton","destroy","ref","width","height","socket","selectedChatCompare","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","handleJoinRoomvideo","useCallback","propsToPass","pathname","handleJoinRoomvoice","handleSendMessage","_yield$axios$post2","io","on","newMessageRecieved","includes","isGroupChat","MdOutlineArrowBackIosNew","FiVideo","FiPhoneCall","SlideFade","in","transitionDuration","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","onKeyDown","IoSend","Chatbox","ChatTileLoading","Stack","direction","gap","SkeletonCircle","spacing","Skeleton","ChatLoading","Array","fill","_","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","_chat$latestMessage$s","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","preventDefault","accessChat","c","css","backdropFilter","p","borderWidth","zIndex","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","rightIcon","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","_user","Chatpage","window","innerWidth","isMobile","setIsMobile","handleResize","addEventListener","removeEventListener","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d95d5a0f.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <label>Email Address</label>\r\n      <input\r\n        value={email}\r\n        type=\"email\"\r\n        placeholder=\"Enter Your Email Address\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <label>Password</label>\r\n      <div className=\"password-input\">\r\n        <input\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type={show ? \"text\" : \"password\"}\r\n          placeholder=\"Enter password\"\r\n        />\r\n        <button className=\"show-hide-button\" onClick={handleClick}>\r\n          {show ? \"Hide\" : \"Show\"}\r\n        </button>\r\n      </div>\r\n      <button\r\n        className=\"login-button\"\r\n        onClick={submitHandler}\r\n        disabled={loading}\r\n      >\r\n        {loading ? \"Loading...\" : \"Login\"}\r\n      </button>\r\n      <button\r\n        className=\"guest-button\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport \"./Signup.css\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [pic, setPic] = useState(\"\");\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"ChatApp\");\r\n      data.append(\"cloud_name\", \"dmkrlx7h6\");\r\n      // fetch(\"https://api.cloudinary.com/v1/piyushproj/image/upload\", {\r\n      fetch(\"https://api.cloudinary.com/v1_1/dmkrlx7h6/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Your Name\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <label>Email Address</label>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter Your Email Address\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <label>Password</label>\r\n      <div className=\"password-input\">\r\n        <input\r\n          type={show ? \"text\" : \"password\"}\r\n          placeholder=\"Enter Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button className=\"show-hide-button\" onClick={handleClick}>\r\n          {show ? \"Hide\" : \"Show\"}\r\n        </button>\r\n      </div>\r\n      <label>Confirm Password</label>\r\n      <div className=\"password-input\">\r\n        <input\r\n          type={show ? \"text\" : \"password\"}\r\n          placeholder=\"Confirm Password\"\r\n          onChange={(e) => setConfirmpassword(e.target.value)}\r\n        />\r\n        <button className=\"show-hide-button\" onClick={handleClick}>\r\n          {show ? \"Hide\" : \"Show\"}\r\n        </button>\r\n      </div>\r\n      <label>Upload your Picture</label>\r\n      <input\r\n        type=\"file\"\r\n        className=\"pic-input\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => postDetails(e.target.files[0])}\r\n      />\r\n      <button\r\n        className=\"signup-button\"\r\n        onClick={submitHandler}\r\n        disabled={picLoading}\r\n      >\r\n        {picLoading ? \"Loading...\" : \"Sign Up\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\nimport \"../styles/HomePage.css\";\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n  const [activeTab, setActiveTab] = useState(\"login\");\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  const handleTabClick = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1 className=\"baat\">Chat</h1>\r\n        <h1 className=\"cheet\">Sync</h1>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"tabs-container\">\r\n          <div\r\n            className={`tab ${activeTab === \"login\" ? \"active\" : \"\"}`}\r\n            onClick={() => handleTabClick(\"login\")}\r\n          >\r\n            <button>Login</button>\r\n          </div>\r\n          <div\r\n            className={`tab ${activeTab === \"signup\" ? \"active\" : \"\"}`}\r\n            onClick={() => handleTabClick(\"signup\")}\r\n          >\r\n            <button>Sign Up</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"tab-panels\">\r\n          <div className={`tab-panel ${activeTab === \"login\" ? \"active\" : \"\"}`}>\r\n            <Login />\r\n          </div>\r\n          <div\r\n            className={`tab-panel ${activeTab === \"signup\" ? \"active\" : \"\"}`}\r\n          >\r\n            <Signup />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderpic = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].pic : users[0].pic;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#0560d1\" : \"rgb(2 127 41)\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"10px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"55%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","// import { Avatar } from \"@chakra-ui/avatar\";\r\n// import { Box, Text } from \"@chakra-ui/layout\";\r\n// import { ChatState } from \"../../Context/ChatProvider\";\r\n\r\n// const UserListItem = ({ user, handleFunction }) => {\r\n//   return (\r\n//     <Box\r\n//       onClick={handleFunction}\r\n//       cursor=\"pointer\"\r\n//       bg=\"#E8E8E8\"\r\n//       _hover={{\r\n//         background: \"#38B2AC\",\r\n//         color: \"white\",\r\n//       }}\r\n//       w=\"100%\"\r\n//       d=\"flex\"\r\n//       alignItems=\"center\"\r\n//       color=\"black\"\r\n//       px={3}\r\n//       py={2}\r\n//       mb={2}\r\n//       borderRadius=\"lg\"\r\n//     >\r\n//       <Avatar\r\n//         mr={2}\r\n//         size=\"sm\"\r\n//         cursor=\"pointer\"\r\n//         name={user.name}\r\n//         src={user.pic}\r\n//       />\r\n//       <Box>\r\n//         <Text>{user.name}</Text>\r\n//         <Text fontSize=\"xs\">\r\n//           <b>Email : </b>\r\n//           {user.email}\r\n//         </Text>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default UserListItem;\r\n\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ user, handleFunction }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#212938\" /* Dark background color */\r\n      _hover={{\r\n        background: \"#4A5568\", /* Darker background color on hover */\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"white\" /* White text color */\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email: </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { SlOptionsVertical } from \"react-icons/sl\";\r\nimport './UpdateGroupChatModal.css'\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"options\">\r\n        <button onClick={onOpen}>\r\n          <SlOptionsVertical />\r\n        </button>\r\n      </div>\r\n      {/* <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} /> */}\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Avatar,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <>\r\n          <Avatar\r\n            onClick={onOpen}\r\n            mt=\"5px\"\r\n            mr={1}\r\n            size=\"md\"\r\n            cursor=\"pointer\"\r\n            src={user.pic}\r\n          />\r\n        </>\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent\r\n          h=\"410px\"\r\n          bg=\"#2D3748\" // Change background color to a dark blue\r\n          color=\"white\" // Text color is white for better visibility\r\n        >\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work Sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work Sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              onClick={onClose}\r\n              bg=\"green.500\" // Change button background color to green\r\n              _hover={{ bg: \"green.600\" }} // Darker green on hover\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import * as React from \"react\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nexport default function RoomPage() {\r\n  const location = useLocation();\r\n  const { chat, chatId, userId, username, voice } = location.state;\r\n  const zpRef = React.useRef(null);\r\n\r\n  const roomID = chatId || \"12345\";\r\n  const userID = userId || \"hello\";\r\n  const userName = username || \"hello\";\r\n  const appID = 1733230220;\r\n  const serverSecret = \"4183a0b873da38547b5da242b0786dbe\";\r\n\r\n  let myMeeting = async (element) => {\r\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n      appID,\r\n      serverSecret,\r\n      roomID,\r\n      userID,\r\n      userName\r\n    );\r\n    // create instance object from token\r\n    zpRef.current = ZegoUIKitPrebuilt.create(kitToken);\r\n    const zp = zpRef.current;\r\n\r\n    // start the call\r\n    zp.joinRoom({\r\n      container: element,\r\n      scenario: {\r\n        mode: ZegoUIKitPrebuilt.GroupCall, // To implement 1-on-1 calls, modify the parameter here to [ZegoUIKitPrebuilt.OneONoneCall].\r\n      },\r\n      turnOnCameraWhenJoining: voice ? false : true,\r\n      showMyCameraToggleButton: voice ? false : true,\r\n      showAudioVideoSettingsButton: voice ? false : true,\r\n      showScreenSharingButton: voice ? false : true,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      console.log(zpRef.current);\r\n      if (!zpRef.current) return;\r\n      zpRef.current.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"myCallContainer\"\r\n      ref={myMeeting}\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    ></div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Fade,\r\n  ScaleFade,\r\n  Slide,\r\n  SlideFade,\r\n  Collapse,\r\n  Avatar,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\n\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport { getSender, getSenderFull, getSenderpic } from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport \"./SingleChat.css\"; // Import your custom CSS file\r\nimport { IconButton, Spacer, Spinner, Text } from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { IoSend } from \"react-icons/io5\";\r\nimport { MdOutlineArrowBackIosNew } from \"react-icons/md\";\r\nimport Chatty from \"./Chatty\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport RoomPage from \"./RoomPage\";\r\nimport { FiVideo } from \"react-icons/fi\";\r\nimport { FiPhoneCall } from \"react-icons/fi\";\r\nconst ENDPOINT = \"https://chatsync.onrender.com/\";\r\nvar socket, selectedChatCompare;\r\n\r\nfunction SingleChat({ fetchAgain, setFetchAgain }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } = ChatState();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        // Handle error\r\n      }\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  // const handleJoinRoom = useCallback(() => {\r\n  //   const propstopass={\r\n  //     chatId:selectedChat, userId:user, username:\"its username\"\r\n  //   }\r\n  //   history.push(`/room`, propstopass);\r\n  // },[history,selectedChat]);\r\n\r\n  const handleJoinRoomvideo = useCallback(() => {\r\n    const propsToPass = {\r\n      chat: selectedChat,\r\n      chatId: selectedChat._id,\r\n      userId: user._id,\r\n      username: user.name,\r\n      voice: false,\r\n    };\r\n    history.push({\r\n      pathname: \"/room\",\r\n      state: propsToPass,\r\n    });\r\n  }, [history, selectedChat, user]);\r\n\r\n  const handleJoinRoomvoice = useCallback(() => {\r\n    const propsToPass = {\r\n      chat: selectedChat,\r\n      chatId: selectedChat._id,\r\n      userId: user._id,\r\n      username: user.name,\r\n      voice: true,\r\n    };\r\n    history.push({\r\n      pathname: \"/room\",\r\n      state: propsToPass,\r\n    });\r\n  }, [history, selectedChat, user]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        // Handle error\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  }, [notification, messages, setFetchAgain, fetchAgain]);\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <div className={`single-chat`}>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            display=\"flex\"\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            justifyContent={\"space-between\"}\r\n            bg=\"#08080abc\"\r\n            borderRadius=\"10px\"\r\n            fontFamily=\"Work sans\"\r\n            className=\"chat-header\"\r\n          >\r\n            {/* <IconButton\r\n              className=\"back-button\"\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            /> */}\r\n\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  <div className=\"profilepicwithname\">\r\n                    <div className=\"back-button\">\r\n                      <button onClick={() => setSelectedChat(\"\")}>\r\n                        <MdOutlineArrowBackIosNew />\r\n                      </button>\r\n                    </div>\r\n                    <ProfileModal\r\n                      user={getSenderFull(user, selectedChat.users)}\r\n                    />\r\n                    <div className=\"sender-name\">\r\n                      {getSender(user, selectedChat.users)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"call-button-one\">\r\n                    <button onClick={handleJoinRoomvideo}>\r\n                      <FiVideo />\r\n                    </button>\r\n                    <button onClick={handleJoinRoomvoice}>\r\n                      <FiPhoneCall />\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"groupiconwithname\">\r\n                    <div className=\"back-button\">\r\n                      <button onClick={() => setSelectedChat(\"\")}>\r\n                        <MdOutlineArrowBackIosNew />\r\n                      </button>\r\n                    </div>\r\n                    <Avatar\r\n                      mt=\"5px\"\r\n                      mr={1}\r\n                      size=\"md\"\r\n                      cursor=\"pointer\"\r\n                      name={selectedChat.chatName}\r\n                      src={\"\"}\r\n                    />\r\n                    <div className=\"group-name\">{selectedChat.chatName}</div>\r\n                  </div>\r\n                  <div className=\"call-button-group\">\r\n                    <button onClick={handleJoinRoomvideo}>\r\n                      <FiVideo />\r\n                    </button>\r\n                    <button onClick={handleJoinRoomvoice}>\r\n                      <FiPhoneCall />\r\n                    </button>\r\n                    <UpdateGroupChatModal\r\n                      fetchMessages={fetchMessages}\r\n                      fetchAgain={fetchAgain}\r\n                      setFetchAgain={setFetchAgain}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <div className=\"chatbox\">\r\n            {loading ? (\r\n              <Spinner size=\"xl\" className=\"spinner\" />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n            {istyping ? (\r\n              <div className=\"typing-indicator\">\r\n                <SlideFade in={istyping} transitionDuration=\"500ms\">\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    style={{\r\n                      marginBottom: \"15px\",\r\n                      color: \"blue\",\r\n                      marginLeft: \"0\",\r\n                    }}\r\n                  />\r\n                </SlideFade>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div className=\"message-input-container\">\r\n              <div className=\"input-with-send-icon\">\r\n                <input\r\n                  className=\"message-input\"\r\n                  placeholder=\"Enter a message..\"\r\n                  value={newMessage}\r\n                  onChange={typingHandler}\r\n                  onKeyDown={sendMessage}\r\n                />\r\n                <div className=\"send-button\">\r\n                  <button onClick={handleSendMessage}>\r\n                    <IoSend />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"empty-chat\">\r\n          <div className=\"gify\">\r\n            <img\r\n              src=\"https://media0.giphy.com/media/MfnJATkfrAIBG/giphy.gif\"\r\n              alt=\"GIF\"\r\n            />\r\n          </div>\r\n          <div className=\"empty-text\">\r\n            <h1>Click on a user to start chatting</h1>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleChat;\r\n","import React from \"react\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport \"./Chatbox.css\"; // Import your custom CSS file\r\n\r\nfunction Chatbox({ fetchAgain, setFetchAgain }) {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <div className={`chatbox-container`}>\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n","import { Stack, Box } from \"@chakra-ui/layout\";\r\nimport { Skeleton, SkeletonCircle } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatTileLoading = () => {\r\n  return (\r\n    <Box\r\n      padding=\"3px 10px\"\r\n      borderRadius=\"10px\"\r\n      backgroundColor=\"#3a404e\"\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        padding=\"10px\"\r\n        gap=\"1rem\"\r\n      >\r\n        <SkeletonCircle size=\"50px\"\r\n        />\r\n        <Stack spacing=\"10px\">\r\n          <Skeleton height=\"16px\" width=\"100px\" />\r\n          <Skeleton height=\"10px\" width=\"80px\" />\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      {Array(4).fill(0).map((_, i) => (\r\n        <ChatTileLoading key={i} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      {/* <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              // <ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal> */}\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n  <ModalOverlay bg=\"rgba(0, 0, 0, 0.7)\" /> {/* Dark overlay */}\r\n  <ModalContent bg=\"#2D3748\" color=\"white\"> {/* Dark background and white text */}\r\n    <ModalHeader\r\n      fontSize=\"35px\"\r\n      fontFamily=\"Work Sans\"\r\n      d=\"flex\"\r\n      justifyContent=\"center\"\r\n    >\r\n      Create Group Chat\r\n    </ModalHeader>\r\n    <ModalCloseButton color=\"white\" /> {/* White close button */}\r\n    <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n      <FormControl>\r\n        <Input\r\n          placeholder=\"Chat Name\"\r\n          mb={3}\r\n          onChange={(e) => setGroupChatName(e.target.value)}\r\n          bg=\"#4A5568\" /* Darker input background color */\r\n          color=\"white\" /* White input text */\r\n        />\r\n      </FormControl>\r\n      <FormControl>\r\n        <Input\r\n          placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n          mb={1}\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n          bg=\"#4A5568\" /* Darker input background color */\r\n          color=\"white\" /* White input text */\r\n        />\r\n      </FormControl>\r\n      <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n        {selectedUsers.map((u) => (\r\n          <UserBadgeItem\r\n            key={u._id}\r\n            user={u}\r\n            handleFunction={() => handleDelete(u)}\r\n          />\r\n        ))}\r\n      </Box>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        searchResult\r\n          ?.slice(0, 4)\r\n          .map((user) => (\r\n            <UserListItem\r\n              key={user._id}\r\n              user={user}\r\n              handleFunction={() => handleGroup(user)}\r\n            />\r\n          ))\r\n      )}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n        Create Chat\r\n      </Button>\r\n    </ModalFooter>\r\n  </ModalContent>\r\n</Modal>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender, getSenderpic } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Avatar, Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport \"./MyChat.css\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  console.log(loggedUser);\r\n\r\n  return (\r\n    <div className=\"my-chats\">\r\n      <div className=\"chats-header\">\r\n        <span>My Chats</span>\r\n        <GroupChatModal>\r\n          <div className=\"add-button\">+</div>\r\n        </GroupChatModal>\r\n      </div>\r\n      <div className=\"chats-list\">\r\n        {chats ? (\r\n          <div className=\"chats\">\r\n            {chats?.map((chat) => (\r\n              <div\r\n                key={chat._id}\r\n                className={`chat-box ${\r\n                  selectedChat === chat ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => setSelectedChat(chat)}\r\n              >\r\n                <div className=\"my-chat-bar\">\r\n                  <Avatar\r\n                    mt=\"5px\"\r\n                    mr={1}\r\n                    size=\"md\"\r\n                    cursor=\"pointer\"\r\n                    name={\r\n                      chat.isGroupChat\r\n                        ? chat.chatName\r\n                        : getSender(loggedUser, chat.users)\r\n                    }\r\n                    src={\r\n                      chat.isGroupChat\r\n                        ? \"\"\r\n                        : getSenderpic(loggedUser, chat.users)\r\n                    }\r\n                  />\r\n                  <div className=\"my-chat-info\">\r\n                    <div className=\"chat-name\">\r\n                      {!chat.isGroupChat\r\n                        ? getSender(loggedUser, chat.users)\r\n                        : chat.chatName}\r\n                    </div>\r\n                    {chat.latestMessage && (\r\n                      <div className=\"latest-message\">\r\n                        {chat.isGroupChat ? (\r\n                          chat.latestMessage.sender?._id === loggedUser?._id ? (\r\n                            <b>You:</b>\r\n                          ) : (\r\n                            <b>{chat.latestMessage.sender.name}:</b>\r\n                          )\r\n                        ) : null}{\" \"}\r\n                        {chat.latestMessage.content.length > 30\r\n                          ? chat.latestMessage.content.substring(0, 31) + \"...\"\r\n                          : chat.latestMessage.content}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n          </div>\r\n\r\n        ) : (\r\n          <div className=\"chats\">\r\n            <ChatLoading />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport io from \"socket.io-client\";\r\n// import {BasicMenu} from \"../BasicMenu\"\r\nconst ENDPOINT = \"https://localhost:5000\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n  const [value, setValue] = useState();\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n  var socket;\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n  });\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    socket.emit(\"logout\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      // console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n      console.log(searchResult);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"#3e425784\"\r\n        css={{ backdropFilter: \"blur(4px)\" }}\r\n        color=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"0px\"\r\n        position=\"relative\" /* Add position relative */\r\n        zIndex={1} /* Add z-index */\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button _hover={{ bg: \"black\" }} variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4} bg=\"#ffffff00\">\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Text className=\"font\" display=\"flex\" fontSize=\"30px\">\r\n          <Text color=\"#00c23e\">Chat</Text>\r\n          <Text color=\"#1a85ff\">Sync</Text>\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            {/* <BasicMenu></BasicMenu> */}\r\n            <MenuList color=\"#ffffffa2\" bg=\"#1E2027\" pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              _hover={{ bg: \"black\" }}\r\n              as={Button}\r\n              bg=\"#1E2027\"\r\n              rightIcon={<ChevronDownIcon />}\r\n            >\r\n              <Avatar\r\n                size=\"sm\"\r\n                color=\"black\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList style={{ backgroundColor: \"black\" }}>\r\n              <ProfileModal user={user}>\r\n                <MenuItem\r\n                  style={{ backgroundColor: \"black\" }}\r\n                  _hover={{ bg: \"black\" }}\r\n                >\r\n                  My Profile\r\n                </MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem\r\n                onClick={logoutHandler}\r\n                style={{ backgroundColor: \"black\" }}\r\n                _hover={({ bg: \"black\" }, { zIndex: \"10\" })}\r\n              >\r\n                Logout\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      {/* <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((_user) => (\r\n                <UserListItem\r\n                  key={_user._id}\r\n                  user={_user}\r\n                  handleFunction={() => accessChat(_user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer> */}\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        {\" \"}\r\n        {/* Added size \"md\" for better appearance */}\r\n        <DrawerOverlay bg=\"rgba(0, 0, 0, 0.7)\" /> {/* Dark overlay */}\r\n        <DrawerContent bg=\"#2D3748\" color=\"white\">\r\n          {\" \"}\r\n          {/* Dark background and white text */}\r\n          <DrawerHeader borderBottomWidth=\"1px\" fontSize=\"20px\">\r\n            Search Users\r\n          </DrawerHeader>{\" \"}\r\n          {/* Adjusted font size */}\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                bg=\"#4A5568\" /* Darker input background color */\r\n                color=\"white\" /* White input text */\r\n              />\r\n              <Button onClick={handleSearch} type=\"submit\" colorScheme=\"blue\">\r\n                Go\r\n              </Button>{\" \"}\r\n              {/* Blue button color */}\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((_user) => (\r\n                <UserListItem\r\n                  key={_user._id}\r\n                  user={_user}\r\n                  handleFunction={() => accessChat(_user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport \"../styles/ChatPage.css\"; // Import your custom CSS file\r\n\r\nfunction Chatpage() {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 440);\r\n  const { user, selectedChat } = ChatState();\r\n\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth < 440);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize, false);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize, false);\r\n    };\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <div className=\"chatpage-container\">\r\n      {user && <SideDrawer />}\r\n      <div className=\"chatpage-content\">\r\n        {user && isMobile && !selectedChat && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && isMobile && selectedChat && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n        {user && !isMobile && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && !isMobile && <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatpage;\r\n","import \"./App.css\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\nimport RoomPage from \"./components/RoomPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path=\"/\" component={Homepage} exact />\r\n      <Route path=\"/chats\" component={Chatpage} />\r\n      <Route path=\"/room\" component={RoomPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport ChatProvider from \"./Context/ChatProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <App />\r\n      </ChatProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}